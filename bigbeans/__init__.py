"""
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@  ,%% %&*.*, @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@/(@....,*/(((((((/////((//#@@%#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@#@(..*((((////////////////////(((#(####@@. ,**///////*,,@&.@@@@@@@@@@@@
    @@@@@@@/*.,(((//////////////(((((((((((((((((((##############(((((((/(@&@@@@@@@@
    @@@@%*,,((///(////(((((((((*.      ..,/(((((((((((#############(((((((((/%#@@@@@
    @@@@**(/(((((((((((((((((/..              .,*((###################((((((((((&@@@
    @/&*(((((((((((((((((((((((((/*,,*/(((((((((#((############%%%######(((((((###&@
    (#/(((((((((((((((((##########((####(####################%%%%%#########(((#####@
    @/##(####((###(((((############################%%%######%%#####################%
    (#############################################%################################%
    ###%%%##########################################################################
    #%%%%%%%%############################################################%%%%#######
    %%%%%%%%%%#############((((((((((####################################%########(#
    @%%%%%%%%%%%############(((((((((########################################%%##((#
    %@##%%%%%%%%%%#####################################################%%%%%%%##((%@
    @@&%#%%%%%%%%%%%############################################%%%%%%%%%%%%%##(%%@@
    @@@%&#%%%%%%%%%%%%%%#%%%################%%%%%####%%%%%%%%%%%%%%%%%%%%%%%%###@@@@
    @@@@@@@##%%%%%%%%%%%%%%%%%%#%%%%##%%%#######%%%%%%%%%%%%%%%%%%%&&&&&%%%##&@@@@@@
    @@@@@@@@%&###%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##@%@@@@@@@@
    @@@@@@@@@@@%@%####%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%###(#@%@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@%#####%%%%%%%%%%%%%%%%%%%%%%%%%%%%#####(((((@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@%%@@@#((((#####((((((((((((((((@@@@&#&@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
"""

from .databean import Databean


async def connect(*args, **kwargs) -> Databean:
    """
    A coroutine to instantiate a connection to a PostgreSQL database.
    All provided parameters are passed to :meth:`asyncpg.connect`
    """

    return await Databean._connect(*args, **kwargs)
